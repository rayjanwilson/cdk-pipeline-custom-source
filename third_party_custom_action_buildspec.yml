version: 0.2
env:
  exported-variables:
    - GIT_COMMIT_ID
    - GIT_COMMIT_MSG
phases:
  install:
    runtime-versions:
      python: 3.9
    # commands:
    # - pip3 install boto3
  build:
    commands:
      - echo "=======================Start-Deployment============================="
      - echo "Setting temporary AWS CLI profile using CodePipeline job poll response"
      - PROFILE='temp-profile'
      - aws configure set aws_access_key_id $CodePipelineArtifactAccessKey --profile $PROFILE
      - aws configure set aws_secret_access_key $CodePipelineArtifactSecretAccessKey --profile $PROFILE
      - aws configure set aws_session_token $CodePipelineArtifactSessionToken --profile $PROFILE
      - echo "Getting the SSH Private Key"
      - aws secretsmanager get-secret-value --secret-id $SSHSecretKeyName --query 'SecretString' --output text >> ~/.ssh/id_rsa
      # - aws s3api get-object --bucket $KeyBucket --key $KeyObject ~/.ssh/id_rsa
      - ls ~/
      - echo "Setting SSH config profile"
      - |
        cat > ~/.ssh/config <<EOF
        Host *
          AddKeysToAgent yes
          StrictHostKeyChecking no
          IdentityFile ~/.ssh/id_rsa
        EOF
      - chmod 600 ~/.ssh/id_rsa
      - echo "Cloning the repository $GitUrl on branch $Branch"
      - git clone --single-branch --depth=1 --branch $Branch $GitUrl .
      - ls
      - echo "Zipping the checked out contents"
      - zip -r $CodePipelineArtifactBucketObjectKey ./ -x '*.git*'
      - mv $CodePipelineArtifactBucketObjectKey.zip $CodePipelineArtifactBucketObjectKey
      - ls -alh
      - echo "Put the zipped and KMS encrypted Object to Originating Pipelines Artifact Store"
      - aws s3 cp $CodePipelineArtifactBucketObjectKey s3://$CodePipelineArtifactBucket/$CodePipelineArtifactBucketPath/$CodePipelineArtifactBucketObjectKey --sse aws:kms --sse-kms-key-id $CodePipelineArtifactKMSKeyId --profile $PROFILE
      - export GIT_COMMIT_ID=$(git rev-parse --short HEAD)
      - echo $GIT_COMMIT_ID
      - COMMIT_MSG=$(git log --pretty='format:%Creset%s' --no-merges -1)
      - export GIT_COMMIT_MSG="${COMMIT_MSG}"
      - echo $GIT_COMMIT_MSG
      - echo "=======================End-Deployment============================="
